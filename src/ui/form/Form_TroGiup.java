package ui.form;

import dao.HoaDon_DAO;
import ui.gui.GUI_TrangChu;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.Map;

public class Form_TroGiup extends JPanel implements ActionListener {

    private CardLayout cardLayout;
    private JPanel contentPanel;
    private JButton btnBack;
    public GUI_TrangChu gui_trangChu;

    public Form_TroGiup() {
        setLayout(new BorderLayout());
        initComponents();
    }

    private void initComponents() {
        // B·ªë c·ª•c ch√≠nh
        setLayout(new BorderLayout());

        // Panel b√™n tr√°i ch·ª©a n√∫t Quay l·∫°i
        JPanel panelButton_left = new JPanel(new FlowLayout(FlowLayout.LEFT));
        ImageIcon iconBack = new ImageIcon("images\\back.png");
        Image imageBack = iconBack.getImage();
        Image scaledImageBack = imageBack.getScaledInstance(13, 17, Image.SCALE_SMOOTH);
        ImageIcon scaledIconBack = new ImageIcon(scaledImageBack);
        panelButton_left.add(btnBack = new JButton("Quay l·∫°i", scaledIconBack));
        btnBack.setFont(new Font("Arial", Font.BOLD, 17));
        btnBack.setContentAreaFilled(false);
        btnBack.setBorderPainted(false);
        btnBack.setFocusPainted(false);
        btnBack.setHorizontalAlignment(SwingConstants.LEFT);

        // T·∫°o panel b√™n tr√°i v·ªõi c√°c n√∫t ch·ª©c nƒÉng
        JPanel sidePanel = new JPanel();
        sidePanel.setLayout(new GridLayout(6, 1, 10, 10));
        sidePanel.setBackground(new Color(135, 242, 250)); // M√†u n·ªÅn xanh d∆∞∆°ng ƒë·∫≠m
        sidePanel.setPreferredSize(new Dimension(220, 0));

        // T·∫°o c√°c n√∫t chuy·ªÉn tab v·ªõi gradient
        JButton btnGuide = createSideButton("H∆∞·ªõng D·∫´n S·ª≠ D·ª•ng");
        JButton btnFAQ = createSideButton("FAQ");
        JButton btnContact = createSideButton("Li√™n H·ªá H·ªó Tr·ª£");
        JButton btnSystemInfo = createSideButton("Th√¥ng Tin H·ªá Th·ªëng");
        JButton btnAbout = createSideButton("V·ªÅ Ch√∫ng T√¥i");
        JButton btnLicense = createSideButton("Th√¥ng Tin B·∫£n Quy·ªÅn");

        sidePanel.add(btnGuide);
        sidePanel.add(btnFAQ);
        sidePanel.add(btnContact);
        sidePanel.add(btnSystemInfo);
        sidePanel.add(btnAbout);
        sidePanel.add(btnLicense);

        // T·∫°o panel ch√≠nh ƒë·ªÉ ch·ª©a n·ªôi dung t·ª´ng tab
        cardLayout = new CardLayout();
        contentPanel = new JPanel(cardLayout);

        // Th√™m c√°c panel n·ªôi dung cho t·ª´ng tab
        contentPanel.add(createGuidePanel(), "Guide");
        contentPanel.add(createFAQPanel(), "FAQ");
        contentPanel.add(createContactPanel(), "Contact");
        contentPanel.add(createSystemInfoPanel(), "SystemInfo");
        contentPanel.add(createAboutPanel(), "About");
        contentPanel.add(createLicensePanel(), "License");

        // Thi·∫øt l·∫≠p s·ª± ki·ªán cho c√°c n√∫t
        btnGuide.addActionListener(e -> cardLayout.show(contentPanel, "Guide"));
        btnFAQ.addActionListener(e -> cardLayout.show(contentPanel, "FAQ"));
        btnContact.addActionListener(e -> cardLayout.show(contentPanel, "Contact"));
        btnSystemInfo.addActionListener(e -> cardLayout.show(contentPanel, "SystemInfo"));
        btnAbout.addActionListener(e -> cardLayout.show(contentPanel, "About"));
        btnLicense.addActionListener(e -> cardLayout.show(contentPanel, "License"));

        // Th√™m panel v√†o giao di·ªán ch√≠nh
        add(panelButton_left, BorderLayout.NORTH);
        add(sidePanel, BorderLayout.WEST);
        add(contentPanel, BorderLayout.CENTER);

        btnBack.addActionListener(this);
    }

    private JButton createSideButton(String text) {
        JButton button = new JButton(text);
        button.setFocusPainted(false);
        button.setBackground(new Color(65, 192, 201)); // M√†u n·ªÅn xanh d∆∞∆°ng
        button.setForeground(Color.WHITE);
        button.setFont(new Font("Arial", Font.BOLD, 14));
        button.setBorder(BorderFactory.createEmptyBorder(15, 20, 15, 20));
        button.setCursor(new Cursor(Cursor.HAND_CURSOR));
        return button;
    }

    private JPanel createGuidePanel() {
        JPanel panel = createStyledPanel();
        panel.add(createTitleLabel("H∆∞·ªõng D·∫´n S·ª≠ D·ª•ng H·ªá Th·ªëng"));
        JTextArea textArea = createTextArea(
                "1. ƒêƒÉng nh·∫≠p v√†o h·ªá th·ªëng v·ªõi t√†i kho·∫£n c·ªßa b·∫°n.\n" +
                        "2. Truy c·∫≠p c√°c ch·ª©c nƒÉng:\n" +
                        "   - Qu·∫£n l√Ω thu·ªëc: Th√™m, s·ª≠a, x√≥a thu·ªëc.\n" +
                        "   - B√°n h√†ng: L·∫≠p h√≥a ƒë∆°n nhanh ch√≥ng.\n" +
                        "   - Kh√°ch h√†ng: Qu·∫£n l√Ω th√¥ng tin kh√°ch h√†ng th√¢n thi·∫øt.\n" +
                        "3. S·ª≠ d·ª•ng t√≠nh nƒÉng sao l∆∞u d·ªØ li·ªáu ƒë·ªãnh k·ª≥.\n" +
                        "4. Truy c·∫≠p m·ª•c 'Tr·ª£ gi√∫p' ƒë·ªÉ nh·∫≠n th√™m h∆∞·ªõng d·∫´n chi ti·∫øt."
        );
        panel.add(new JScrollPane(textArea), BorderLayout.CENTER);
        return panel;
    }

    private JPanel createFAQPanel() {
        JPanel panel = createStyledPanel();
        panel.add(createTitleLabel("C√¢u H·ªèi Th∆∞·ªùng G·∫∑p (FAQ)"));
        JTextArea textArea = createTextArea(
                "Q: L√†m sao ƒë·ªÉ th√™m thu·ªëc m·ªõi?\n" +
                        "A: V√†o 'Qu·∫£n l√Ω thu·ªëc' -> Nh·∫•n 'Th√™m thu·ªëc'.\n\n" +
                        "Q: L√†m th·∫ø n√†o ƒë·ªÉ l·∫≠p h√≥a ƒë∆°n?\n" +
                        "A: V√†o 'B√°n h√†ng', ch·ªçn s·∫£n ph·∫©m v√† nh·∫•n 'T·∫°o h√≥a ƒë∆°n'.\n\n" +
                        "Q: C√°ch kh√¥i ph·ª•c d·ªØ li·ªáu?\n" +
                        "A: V√†o 'H·ªá th·ªëng' -> 'Kh√¥i ph·ª•c d·ªØ li·ªáu'."
        );
        panel.add(new JScrollPane(textArea), BorderLayout.CENTER);
        return panel;
    }

    private JPanel createContactPanel() {
        JPanel panel = createStyledPanel();
        panel.add(createTitleLabel("Li√™n H·ªá H·ªó Tr·ª£"));
        JTextArea textArea = createTextArea(
                "N·∫øu b·∫°n c·∫ßn h·ªó tr·ª£, vui l√≤ng li√™n h·ªá:\n\n" +
                        "üìß Email: support@nhathuocbvd.com\n" +
                        "üìû Hotline: 0915-020-803\n" +
                        "üåê Website: www.nhathuocbvd.com\n" +
                        "üè¢ ƒê·ªãa ch·ªâ: 12 Nguy·ªÖn VƒÉn B·∫£o, G√≤ V·∫•p, TP.HCM"
        );
        panel.add(new JScrollPane(textArea), BorderLayout.CENTER);
        return panel;
    }

    private JPanel createSystemInfoPanel() {
        JPanel panel = createStyledPanel();
        panel.add(createTitleLabel("Th√¥ng Tin H·ªá Th·ªëng"));
        JTextArea textArea = createTextArea(
                "Ph·∫ßn m·ªÅm qu·∫£n l√Ω hi·ªáu thu·ªëc BVD\n" +
                        "Phi√™n b·∫£n: 2.0\n" +
                        "C·∫≠p nh·∫≠t: Th√°ng 11, 2024\n\n" +
                        "T√≠nh nƒÉng n·ªïi b·∫≠t:\n" +
                        "- Qu·∫£n l√Ω kho h√†ng th√¥ng minh\n" +
                        "- B√°o c√°o doanh thu chi ti·∫øt\n" +
                        "- H·ªó tr·ª£ nhi·ªÅu h√¨nh th·ª©c thanh to√°n"
        );
        panel.add(new JScrollPane(textArea), BorderLayout.CENTER);
        return panel;
    }

    private JPanel createAboutPanel() {
        JPanel panel = createStyledPanel();
        panel.add(createTitleLabel("V·ªÅ Ch√∫ng T√¥i"));
        JTextArea textArea = createTextArea(
                "Ch√∫ng t√¥i l√† ƒë·ªôi ng≈© ph√°t tri·ªÉn ph·∫ßn m·ªÅm chuy√™n nghi·ªáp\n" +
                        "v·ªõi s·ª© m·ªánh mang ƒë·∫øn gi·∫£i ph√°p t·ªëi ∆∞u cho c√°c nh√† thu·ªëc\n" +
                        "trong vi·ªác qu·∫£n l√Ω b√°n h√†ng v√† chƒÉm s√≥c kh√°ch h√†ng."
        );
        panel.add(new JScrollPane(textArea), BorderLayout.CENTER);
        return panel;
    }

    private JPanel createLicensePanel() {
        JPanel panel = createStyledPanel();
        panel.add(createTitleLabel("Th√¥ng Tin B·∫£n Quy·ªÅn"));
        JTextArea textArea = createTextArea(
                "B·∫£n quy·ªÅn thu·ªôc v·ªÅ BVD Pharmacy System.\n" +
                        "M·ªçi h√¨nh th·ª©c sao ch√©p v√† s·ª≠ d·ª•ng tr√°i ph√©p ƒë·ªÅu b·ªã c·∫•m."
        );
        panel.add(new JScrollPane(textArea), BorderLayout.CENTER);
        return panel;
    }

    private JPanel createStyledPanel() {
        JPanel panel = new JPanel(new BorderLayout());
        panel.setBackground(new Color(135, 242, 250)); // M√†u xanh galaxy
        panel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));
        return panel;
    }

    private JLabel createTitleLabel(String text) {
        JLabel label = new JLabel(text, JLabel.CENTER);
        label.setFont(new Font("Arial", Font.BOLD, 22));
        label.setForeground(Color.CYAN);
        return label;
    }

    private JTextArea createTextArea(String content) {
        JTextArea textArea = new JTextArea(content);
        textArea.setWrapStyleWord(true);
        textArea.setLineWrap(true);
        textArea.setEditable(false);
        textArea.setBackground(new Color(0, 158, 170));
        textArea.setForeground(Color.WHITE);
        textArea.setFont(new Font("Arial", Font.PLAIN, 16));
        return textArea;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == btnBack) {
            setVisible(false);
            HoaDon_DAO hoaDon_dao = new HoaDon_DAO();
            List<Map<String, Object>> dsBaoCao = hoaDon_dao.thongKeDoanhThuTheoThangCuaNhanVien();
            gui_trangChu.updateBieuDoThongKe(dsBaoCao);
        }
    }

    public void setTrangChu(GUI_TrangChu trangChu) {
        this.gui_trangChu = trangChu;
    }
}
